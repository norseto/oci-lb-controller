apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: lbregistrars.nodes.peppy-ratio.dev
spec:
  group: nodes.peppy-ratio.dev
  names:
    kind: LBRegistrar
    listKind: LBRegistrarList
    plural: lbregistrars
    singular: lbregistrar
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LBRegistrar is the Schema for the lbregistrars API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LBRegistrarSpec defines the desired state of LBRegistrar
            properties:
              apiKey:
                properties:
                  fingerprint:
                    minLength: 1
                    type: string
                  privateKey:
                    properties:
                      namespace:
                        type: string
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - secretKeyRef
                    type: object
                  region:
                    minLength: 1
                    type: string
                  tenancy:
                    minLength: 1
                    type: string
                  user:
                    minLength: 1
                    type: string
                required:
                - fingerprint
                - privateKey
                - region
                - tenancy
                - user
                type: object
              backendSetName:
                minLength: 1
                type: string
              loadBalancerId:
                minLength: 1
                type: string
              nodePort:
                description: |-
                  NodePort is the target port on the node.
                  If Service is specified, this field is ignored and the nodePort from the service is used.
                type: integer
              port:
                description: Port is a deprecated alias for NodePort. Use NodePort
                  instead.
                type: integer
              service:
                description: |-
                  Service provides the information to fetch the NodePort from a Service.
                  If this is specified, the NodePort field is ignored.
                properties:
                  name:
                    minLength: 1
                    type: string
                  namespace:
                    minLength: 1
                    type: string
                  port:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      Port is the port of the service.
                      It can be a port name or a port number.
                    x-kubernetes-int-or-string: true
                required:
                - name
                - namespace
                - port
                type: object
              weight:
                default: 1
                type: integer
            required:
            - apiKey
            - backendSetName
            - loadBalancerId
            type: object
          status:
            description: LBRegistrarStatus defines the observed state of LBRegistrar
            properties:
              phase:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: oci-lb-controller
    control-plane: controller-manager
  name: oci-lb-controller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: lbregistrars.nodes.peppy-ratio.dev
spec:
  group: nodes.peppy-ratio.dev
  names:
    kind: LBRegistrar
    listKind: LBRegistrarList
    plural: lbregistrars
    singular: lbregistrar
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LBRegistrar is the Schema for the lbregistrars API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LBRegistrarSpec defines the desired state of LBRegistrar
            properties:
              apiKey:
                properties:
                  fingerprint:
                    minLength: 1
                    type: string
                  privateKey:
                    properties:
                      namespace:
                        type: string
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - secretKeyRef
                    type: object
                  region:
                    minLength: 1
                    type: string
                  tenancy:
                    minLength: 1
                    type: string
                  user:
                    minLength: 1
                    type: string
                required:
                - fingerprint
                - privateKey
                - region
                - tenancy
                - user
                type: object
              backendSetName:
                minLength: 1
                type: string
              loadBalancerId:
                minLength: 1
                type: string
              nodePort:
                description: |-
                  NodePort is the target port on the node.
                  If Service is specified, this field is ignored and the nodePort from the service is used.
                type: integer
              port:
                description: Port is a deprecated alias for NodePort. Use NodePort
                  instead.
                type: integer
              service:
                description: |-
                  Service provides the information to fetch the NodePort from a Service.
                  If this is specified, the NodePort field is ignored.
                properties:
                  name:
                    minLength: 1
                    type: string
                  namespace:
                    minLength: 1
                    type: string
                  port:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      Port is the port of the service.
                      It can be a port name or a port number.
                    x-kubernetes-int-or-string: true
                required:
                - name
                - namespace
                - port
                type: object
              weight:
                default: 1
                type: integer
            required:
            - apiKey
            - backendSetName
            - loadBalancerId
            type: object
          status:
            description: LBRegistrarStatus defines the observed state of LBRegistrar
            properties:
              phase:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-controller-manager
  namespace: oci-lb-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-leader-election-role
  namespace: oci-lb-controller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oci-lb-controller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nodes.peppy-ratio.dev
  resources:
  - lbregistrars
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nodes.peppy-ratio.dev
  resources:
  - lbregistrars/finalizers
  verbs:
  - update
- apiGroups:
  - nodes.peppy-ratio.dev
  resources:
  - lbregistrars/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-leader-election-rolebinding
  namespace: oci-lb-controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oci-lb-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: oci-lb-controller-controller-manager
  namespace: oci-lb-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oci-lb-controller-manager-role
subjects:
- kind: ServiceAccount
  name: oci-lb-controller-controller-manager
  namespace: oci-lb-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: oci-lb-controller
  name: oci-lb-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oci-lb-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: oci-lb-controller-controller-manager
  namespace: oci-lb-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: oci-lb-controller
    control-plane: controller-manager
  name: oci-lb-controller-controller-manager-metrics-service
  namespace: oci-lb-controller-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: oci-lb-controller
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: oci-lb-controller
    control-plane: controller-manager
  name: oci-lb-controller-controller-manager
  namespace: oci-lb-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: norseto/oci-lb-registrar:v0.4.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: oci-lb-controller-controller-manager
      terminationGracePeriodSeconds: 10
